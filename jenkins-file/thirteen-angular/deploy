pipeline{
	//triggers {
        //GenericTrigger(
			/*
			使用Generic Webhook Triggered
			从gitlab的webhook post的数据中获取相关的项目信息
			*/
            // genericVariables: [
            //    [key: 'MR_TO_BRANCH', value: '$.object_attributes.target_branch'],
            //    [key: 'MR_OBJECT_KIND', value: '$.object_kind'],
            //    [key: 'MR_ACTION', value: '$.object_attributes.action', defaultValue: 'merge']
            //],
			/*	
			Token使用项目名称
			配置在Gitlab的webhook地址为：
			*/
            //token: 'xxxxx',
            //causeString: 'Triggered',
			/*
			同一个项目webhook的地址是一致的，需要根据分支等信息触发不同的流程
			regexpFilterExpression的表达式是标准Java Regex Pattern
			注意由于是包含在引号中，所以特殊字符需要转义
			将<BRANCH NAME>替换成正式的branch名字，比如：
			regexpFilterExpression: '^xxxxx\\smerge_request\\smerge',
			*/
        //)
    //}
	//代理节点，这里使用任意类型的（可选node、docker、k8s等）
    agent any
	//定义流程
    stages {
		//定义Build处理流程
        stage('Build') {
            steps{
				//开始运行
				echo 'Build Steps......'
				/*
				使用NodeJS插件进行编译
				*/
				nodejs('NodeJS12.18.2') {
				    sh '''
				        node -v
				        npm -v
					#npm set registry https://registry.npmjs.org
				        npm set registry https://registry.npm.taobao.org
				        npm cache clean -f --force
				        #npm install -g n
				        #n stable
				        # 如果node-sass源安装失败，使用下面两行安装
					#npm config set sass_binary_site=https://registry.npmjs.org/mirrors/node-sass
				        npm config set sass_binary_site=https://npm.taobao.org/mirrors/node-sass
					npm i node-sass -D --verbose
				        npm install
					# --max-new-space-size
				        npm run build-prod-base --max-old-space-size=1024
				    '''
				}
            }
        }
	//定义Build之后的处理流程
        stage('Post') {
            steps{
				//开始运行
				/*
				1.将编译成功并需要部署的文件复制到临时目录中，方便后续SFTP传输
				*/
				sh '''
				
